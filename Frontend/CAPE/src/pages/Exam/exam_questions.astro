---
import Layout from "@layouts/LayoutExam.astro";

// Placeholder for dynamic data
let totalQuestions = 100; // Default number of questions
let currentQuestion = 1; // Current question number
let examSettings = {
  duration: 60, // in minutes
  startDate: new Date().toISOString().slice(0, 10), // Default to today
  startTime: "09:00", // Default start time
  examTime: "10:00", // Default exam time (start time of the exam)
};

// Toggles modal visibility
const toggleSettingsModal = () => {
  const modal = document.getElementById('settings-modal');
  modal.classList.toggle('hidden');
  modal.classList.toggle('flex');
};
---

<Layout title="CAPE">
  <main class="h-screen bg-gray-50 p-8 flex">
    <!-- Sidebar Section -->
    <aside class="w-1/4 bg-white shadow-md p-4 rounded-lg overflow-y-auto h-full">
      <h2 class="text-lg font-bold mb-4 text-gray-800">Questions</h2>
      <ul class="grid grid-cols-3 gap-4"> <!-- Updated to 3 columns -->
        {Array.from({ length: totalQuestions }, (_, index) => (
          <li key={index} class="text-center">
            <button
              class={`w-16 h-16 rounded-full ${  // Increased button size
                currentQuestion === index + 1
                  ? 'bg-indigo-500 text-white'
                  : 'bg-gray-100 text-gray-600 hover:bg-gray-300'
              } transition-all shadow-sm hover:shadow-md`}
              onClick={() => (currentQuestion = index + 1)}
              title={`Edit Question ${index + 1}`}
            >
              {index + 1}
            </button>
          </li>
        ))}
      </ul>
    </aside>

    <!-- Main Question Creation Section -->
    <section class="w-3/4 bg-white shadow-md rounded-lg ml-6 p-6 flex flex-col">
      <header class="flex justify-between items-center mb-4">
        <div class="flex items-center space-x-3">
          <span class="font-medium text-gray-700">Hello Teacher</span>
        </div>
        <div class="flex items-center space-x-3">
          <!-- Settings Button -->
          <button
            type="button"
            title="Settings"
            class="p-2 bg-gray-100 rounded-full hover:bg-gray-200 shadow-sm transition-all"
            onClick={toggleSettingsModal}
          >
            ⚙️
          </button>
        </div>
      </header>

      <!-- Question Navigation -->
      <div class="flex items-center mb-6">
        <label for="questionNavigation" class="font-medium text-gray-600 mr-4">
          Go to Question:
        </label>
        <div class="flex items-center space-x-1">
          <input
            type="number"
            value={currentQuestion}
            onInput={(e) => {
              const newQuestion = Number(e.target.value);
              if (newQuestion > 0 && newQuestion <= totalQuestions) {
                currentQuestion = newQuestion;
              }
            }}
            class="w-16 text-center p-2 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
            min="1"
          />
          <span class="text-gray-600">/ {totalQuestions}</span>
        </div>
      </div>

      <!-- Question Form -->
      <div>
        <form>
          <!-- Question Input -->
          <label class="block text-lg font-medium text-gray-700 mb-2" for="question">
            Enter Question
          </label>
          <textarea
            id="question"
            rows="3"
            placeholder="Type your question here..."
            class="w-full p-4 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500 resize-none"
          ></textarea>

          <!-- Answer Options with Increased Distance -->
          <div class="mt-6 space-y-6">
            {["Option 1", "Option 2", "Option 3", "Option 4"].map((option, i) => (
              <div key={i} class="flex items-center space-x-3">
                <input
                  type="radio"
                  name="correctOption"
                  id={`option-${i}`}
                  value={option}
                  class="form-radio text-indigo-600 focus:ring-indigo-500"
                />
                <input
                  type="text"
                  placeholder={`Enter ${option} here...`}
                  class="w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
                />
              </div>
            ))}
          </div>
        </form>
      </div>

      <!-- Footer -->
      <footer class="flex justify-between mt-auto pt-6 border-t">
        <button
          type="button"
          class="px-6 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 hover:shadow-lg transition-all"
          onClick={() => currentQuestion > 1 && (currentQuestion -= 1)}
        >
          Previous
        </button>
        <button
          type="button"
          class="px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 hover:shadow-lg transition-all"
          onClick={() => alert("Save current question functionality")}
        >
          Save Question
        </button>
        <button
          type="button"
          class="px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 hover:shadow-lg transition-all"
          onClick={() => currentQuestion < totalQuestions && (currentQuestion += 1)}
        >
          Next
        </button>
      </footer>
    </section>

    <!-- Settings Modal (Popup) -->
    <div
      id="settings-modal"
      class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 justify-center items-center"
    >
      <div class="bg-white w-1/3 p-6 rounded-lg shadow-lg relative">
        <h2 class="text-lg font-bold mb-4">Exam Settings</h2>
        <form class="space-y-4">
          <!-- Total Questions -->
          <div>
            <label class="block text-sm font-medium text-gray-700">Total Questions</label>
            <input
              type="number"
              min="1"
              value={totalQuestions}
              onInput={(e) => (totalQuestions = Number(e.target.value))}
              class="w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
            />
          </div>

          <!-- Exam Duration -->
          <div>
            <label class="block text-sm font-medium text-gray-700">Duration (in minutes)</label>
            <input
              type="number"
              min="1"
              value={examSettings.duration}
              onInput={(e) => (examSettings.duration = Number(e.target.value))}
              class="w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
            />
          </div>

          <!-- Exam Start Date -->
          <div>
            <label class="block text-sm font-medium text-gray-700">Start Date</label>
            <input
              type="date"
              value={examSettings.startDate}
              onInput={(e) => (examSettings.startDate = e.target.value)}
              class="w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
            />
          </div>

          <!-- Exam Start Time -->
          <div>
            <label class="block text-sm font-medium text-gray-700">Start Time</label>
            <input
              type="time"
              value={examSettings.startTime}
              onInput={(e) => (examSettings.startTime = e.target.value)}
              class="w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
            />
          </div>

          <!-- New Exam Time Setting -->
          <div>
            <label class="block text-sm font-medium text-gray-700">Set Exam Time</label>
            <input
              type="time"
              value={examSettings.examTime}
              onInput={(e) => (examSettings.examTime = e.target.value)}
              class="w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
            />
          </div>
        </form>

        <!-- Save and Close Buttons -->
        <div class="mt-6 flex justify-end space-x-4">
          <button
            class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300"
            onClick={toggleSettingsModal}
          >
            Close
          </button>
          <button
            class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700"
            onClick={() => alert("Settings saved successfully!")}
          >
            Save
          </button>
        </div>
      </div>
    </div>
  </main>
</Layout>
